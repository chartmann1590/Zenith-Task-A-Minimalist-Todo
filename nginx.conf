server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Proxy API requests to backend
    location /api/ {
        # Add upstream configuration for better error handling
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        # Handle backend unavailability gracefully
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
        
        # Return 503 if backend is completely unavailable
        error_page 502 503 504 = @backend_unavailable;
    }
    
    # Fallback for when backend is unavailable
    location @backend_unavailable {
        add_header Content-Type application/json;
        return 503 '{"success":false,"error":"Backend service temporarily unavailable"}';
    }

    # Handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Serve JavaScript modules with correct MIME type
    location ~* \.js$ {
        add_header Content-Type "text/javascript" always;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Cache other static assets
    location ~* \.(css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}