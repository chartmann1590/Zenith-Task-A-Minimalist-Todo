name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.ts'
      - 'tsconfig*.json'
      - 'tailwind.config.js'
      - 'eslint.config.js'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.ts'
      - 'tsconfig*.json'
      - 'tailwind.config.js'
      - 'eslint.config.js'

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Build application
      run: npm run build
      
    - name: Test build output
      run: |
        # Check if build output exists and has expected files
        if [ ! -d "dist" ]; then
          echo "❌ Build directory 'dist' not found"
          exit 1
        fi
        
        if [ ! -f "dist/index.html" ]; then
          echo "❌ index.html not found in build output"
          exit 1
        fi
        
        echo "✅ Build output validation passed"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == 20
      with:
        name: frontend-build
        path: dist/
        retention-days: 7

  frontend-preview:
    runs-on: ubuntu-latest
    needs: frontend-tests
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for preview
      run: npm run build
      
    - name: Deploy to GitHub Pages (Preview)
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/develop'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        destination_dir: preview/${{ github.event.number }}