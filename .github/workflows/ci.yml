name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install frontend dependencies
      run: npm install
      
    - name: Install backend dependencies
      run: cd backend && npm install
      
    - name: Run frontend linting
      run: npm run lint
      
    - name: Run frontend type check
      run: npx tsc --noEmit
      
    - name: Build frontend
      run: npm run build
      
    - name: Start backend server for testing
      run: |
        cd backend
        npm start &
        echo $! > backend.pid
        sleep 15
      env:
        NODE_ENV: test
        PORT: 3001
        
    - name: Wait for backend to be ready
      run: |
        for i in {1..30}; do
          if curl -f http://localhost:3001/api/health > /dev/null 2>&1; then
            echo "Backend is ready!"
            break
          fi
          echo "Waiting for backend... ($i/30)"
          sleep 2
        done
        
    - name: Run backend tests
      run: cd backend && npm test
      env:
        NODE_ENV: test
        
    - name: Run integration tests
      run: |
        chmod +x test/test-local.sh
        cd test && ./test-local.sh
      env:
        NODE_ENV: test
        
    - name: Security audit (frontend)
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Security audit (backend)
      run: cd backend && npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Cleanup backend server
      if: always()
      run: |
        if [ -f backend.pid ]; then
          kill $(cat backend.pid) 2>/dev/null || true
          rm -f backend.pid
        fi
        pkill -f "node.*server.js" || true

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build frontend Docker image
      run: docker build -f Dockerfile.frontend -t todo-frontend:test .
      
    - name: Build backend Docker image
      run: docker build -f backend/Dockerfile -t todo-backend:test ./backend
      
    - name: Test frontend container
      run: |
        docker run -d --name frontend-test -p 3000:80 todo-frontend:test
        sleep 10
        curl -f http://localhost:3000
        docker stop frontend-test && docker rm frontend-test
        
    - name: Test backend container
      run: |
        docker run -d --name backend-test -p 3001:3001 \
          -e NODE_ENV=test \
          -e SMTP_HOST=smtp.ethereal.email \
          -e SMTP_USER=test@example.com \
          -e SMTP_PASS=testpassword \
          -e TO_EMAIL=test@example.com \
          todo-backend:test
        sleep 15
        curl -f http://localhost:3001/api/health
        docker stop backend-test && docker rm backend-test