# Frontend Dockerfile for React/Vite Todo App
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json* ./
RUN npm ci

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the application
RUN npm run build

# Production image, copy all the files and run the app
FROM nginx:alpine AS runner
RUN apk add --no-cache wget
WORKDIR /usr/share/nginx/html

# Copy the built application
COPY --from=builder /app/dist .

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy startup script and make it executable
COPY start-nginx.sh /start-nginx.sh
RUN chmod +x /start-nginx.sh

# Create a proper nginx.conf that includes MIME types and our configuration
RUN echo 'events { worker_connections 1024; }' > /etc/nginx/nginx.conf && \
    echo 'http {' >> /etc/nginx/nginx.conf && \
    echo '  include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \
    echo '  default_type application/octet-stream;' >> /etc/nginx/nginx.conf && \
    echo '  sendfile on;' >> /etc/nginx/nginx.conf && \
    echo '  tcp_nopush on;' >> /etc/nginx/nginx.conf && \
    echo '  tcp_nodelay on;' >> /etc/nginx/nginx.conf && \
    echo '  keepalive_timeout 65;' >> /etc/nginx/nginx.conf && \
    echo '  client_max_body_size 10M;' >> /etc/nginx/nginx.conf && \
    echo '  include /etc/nginx/conf.d/*.conf;' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf

# Verify the startup script exists
RUN echo "Verifying startup script..." && \
    ls -la /start-nginx.sh && \
    echo "Startup script verified successfully" && \
    echo "Script content preview:" && \
    head -5 /start-nginx.sh

# Expose port 80
EXPOSE 80

# Start nginx with backend check
# Use sh to explicitly run the script
CMD ["/bin/sh", "/start-nginx.sh"]